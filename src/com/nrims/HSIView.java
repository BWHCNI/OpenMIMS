/*
 * HSIView.java
 *
 * Created on May 4, 2006, 10:02 AM
 */
package com.nrims;

import javax.swing.JPanel;
import javax.swing.SpinnerNumberModel;

/**
 * @author  Douglas Benson
 * @author <a href="mailto:rob.gonzalez@gmail.com">Rob Gonzalez</a>
 */
public class HSIView extends JPanel {

    public static final long serialVersionUID = 1;
    private boolean bUpdating = false;
    private UI ui = null;
    private HSIProps props = new com.nrims.HSIProps();
   //  private HSIProps ratioprops = new com.nrims.HSIProps();

    /**
     * @param ui UI into which the HSIView will be created.
     */
    public HSIView(UI ui) {
        initComponents();
        jSpinner1.setModel(new SpinnerNumberModel(1.0, 0.001, 65535.0, 0.001));
        jSpinner2.setModel(new SpinnerNumberModel(0.0, 0.0, 65535.0, 0.001));
        jSpinner3.setModel(new SpinnerNumberModel(3, 1, 65535, 1));
        jSpinner4.setModel(new SpinnerNumberModel(3, 1, 65535, 1));
        jSlider1.setMaximum(511);
        jSlider1.setMinimum(0);
        jSlider1.setValue(256);

        ratioMinSpinner.setModel(new SpinnerNumberModel(0.0, 0.0, 65535.0, 0.001));
        ratioMaxSpinner.setModel(new SpinnerNumberModel(1.0, 0.0, 65535.0, 0.001));

        this.ui = ui;
        updateImage();
    // update();
    }

    public int whichRatio() {
        return ratioContrastComboBox.getSelectedIndex();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSpinner3 = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jSpinner4 = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        ratioContrastRadioButton = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        ratioMinSpinner = new javax.swing.JSpinner();
        ratioMaxSpinner = new javax.swing.JSpinner();
        ratioContrastComboBox = new javax.swing.JComboBox();

        jTextField1.setText("jTextField1");

        jLabel1.setText("Numerator");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mass 1", "Mass 2", "Mass 3", "Mass 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel2.setText("Denominator");
        jLabel2.setToolTipText("Select the mass for the denominator");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mass 1", "Mass 2", "Mass 3", "Mass 4" }));
        jComboBox2.setSelectedIndex(1);
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });

        jButton1.setText("Display HSI");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Ratio Range");

        jLabel4.setText("Max");

        jSpinner1.setToolTipText("Max Ratio in HSI");
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jLabel5.setText("Min");

        jSpinner2.setToolTipText("Min Ratio in HSI");
        jSpinner2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner2StateChanged(evt);
            }
        });

        jButton2.setText("Auto");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setText("Threshold");

        jLabel7.setText("Num");

        jSpinner3.setToolTipText("Min Numerator value");
        jSpinner3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner3StateChanged(evt);
            }
        });

        jLabel8.setText("Den");

        jSpinner4.setToolTipText("Min Denominator value");
        jSpinner4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner4StateChanged(evt);
            }
        });

        jLabel9.setText("Contrast");

        jLabel12.setText("Transparency");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Max Num,Den", "Numerator", "Denominator", "Min Num,Den", "Mean Num,Den", "Sum Num,Den", "RMS Num,Den" }));
        jComboBox3.setToolTipText("Intensity component of HSI");
        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });

        jLabel13.setText("Label");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Off", "Scale", "Scale+Labels" }));
        jComboBox4.setToolTipText("Show Scale and Labels");
        jComboBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox4ItemStateChanged(evt);
            }
        });

        jButton3.setText("Display Ratio");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        ratioContrastRadioButton.setText("Fix Ratio Contrast");
        ratioContrastRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ratioContrastRadioButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("Min");

        jLabel11.setText("Max");

        ratioMinSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ratioMinSpinnerStateChanged(evt);
            }
        });

        ratioMaxSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ratioMaxSpinnerStateChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(layout.createSequentialGroup()
                                        .add(jLabel1)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 127, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(layout.createSequentialGroup()
                                        .add(jLabel2)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 127, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(layout.createSequentialGroup()
                                        .add(29, 29, 29)
                                        .add(jButton3)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 160, Short.MAX_VALUE)
                                        .add(ratioContrastComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(layout.createSequentialGroup()
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, ratioContrastRadioButton)
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                                    .add(jLabel10)
                                                    .add(jLabel11))
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                                    .add(ratioMaxSpinner)
                                                    .add(ratioMinSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                                .add(8, 8, 8)))))
                                .add(21, 21, 21))
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel12)
                                    .add(layout.createSequentialGroup()
                                        .add(jLabel9)
                                        .add(59, 59, 59)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jSlider1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 290, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(layout.createSequentialGroup()
                                                .add(jComboBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(jLabel13)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(jComboBox4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 105, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 72, Short.MAX_VALUE)
                                .add(jButton1)))
                        .add(35, 35, 35))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel6)
                            .add(jLabel3))
                        .add(43, 43, 43)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(jLabel7)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jSpinner3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                                .add(28, 28, 28)
                                .add(jLabel8)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jSpinner4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE))
                            .add(layout.createSequentialGroup()
                                .add(3, 3, 3)
                                .add(jLabel4)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jSpinner1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                                .add(30, 30, 30)
                                .add(jLabel5)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jSpinner2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)))
                        .add(18, 18, 18)
                        .add(jButton2)
                        .add(156, 156, 156))))
        );

        layout.linkSize(new java.awt.Component[] {jSpinner1, jSpinner2, jSpinner3, jSpinner4}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton3))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(ratioContrastComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(ratioContrastRadioButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel10)
                            .add(ratioMinSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel11)
                            .add(ratioMaxSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(27, 27, 27)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel6)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jSpinner1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel3)
                                .add(jLabel4))
                            .add(jLabel5)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jSpinner2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jButton2)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jSpinner3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel7)
                            .add(jSpinner4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel8))))
                .add(26, 26, 26)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel9)
                    .add(jSlider1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel12)
                    .add(jComboBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel13)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jComboBox4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jButton1)))
                .add(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        if (bUpdating) {
            return;
        }
        props.setMaxRGB(512 - jSlider1.getValue());
        update(false);
    }//GEN-LAST:event_jSlider1StateChanged

    private void jSpinner4StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner4StateChanged
        if (bUpdating) {
            return;
        }
        props.setMinDen(new Integer(jSpinner4.getValue().toString()));
        update(false);
    }//GEN-LAST:event_jSpinner4StateChanged

    private void jSpinner3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner3StateChanged
        if (bUpdating) {
            return;
        }
        props.setMinNum(new Integer(jSpinner3.getValue().toString()));
        update(false);
    }//GEN-LAST:event_jSpinner3StateChanged

    private void jSpinner2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner2StateChanged
        if (bUpdating) {
            return;
        }
        props.setMinRatio(new Double(jSpinner2.getValue().toString()));
        update(false);
    }//GEN-LAST:event_jSpinner2StateChanged

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        if (bUpdating) {
            return;
        }
        props.setMaxRatio(new Double(jSpinner1.getValue().toString()));
        update(false);
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        displayHSI();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        computeRatio();
        String rationame = ((String) jComboBox1.getSelectedItem()) + "/" + ((String) jComboBox2.getSelectedItem());
        ratioContrastComboBox.insertItemAt(rationame, 0);
        ratioContrastComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox4ItemStateChanged
        if (bUpdating) {
            return;
        }
        props.setLabelMethod(jComboBox4.getSelectedIndex());
        update(false);
    }//GEN-LAST:event_jComboBox4ItemStateChanged

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
        if (bUpdating) {
            return;
        }
        props.setTransparency(jComboBox3.getSelectedIndex());
        update(false);
    }//GEN-LAST:event_jComboBox3ItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (getRatioRange()) {
            update(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        if (bUpdating) {
            return;
        }
        props.setDenMass(jComboBox2.getSelectedIndex());
        update(false);
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        if (bUpdating) {
            return;
        }
        props.setNumMass(jComboBox1.getSelectedIndex());
        update(false);
    }//GEN-LAST:event_jComboBox1ItemStateChanged

private void ratioContrastRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ratioContrastRadioButtonActionPerformed
// TODO add your handling code here:

    if (ratioContrastRadioButton.isSelected()) {
        props.setMinRatio(new Double(ratioMinSpinner.getValue().toString()));
        props.setMaxRatio(new Double(ratioMaxSpinner.getValue().toString()));

        ui.computeRatio(props);

    } else {
        ui.computeRatio(props);
        resetRatioSpinners(props);
    }

}//GEN-LAST:event_ratioContrastRadioButtonActionPerformed

private void ratioMinSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ratioMinSpinnerStateChanged
// TODO add your handling code here:
    props.setMinRatio(new Double(ratioMinSpinner.getValue().toString()));
    props.setMaxRatio(new Double(ratioMaxSpinner.getValue().toString()));

    ui.computeRatio(props);
    resetRatioSpinners(props);
}//GEN-LAST:event_ratioMinSpinnerStateChanged

private void ratioMaxSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ratioMaxSpinnerStateChanged
// TODO add your handling code here:
    props.setMinRatio(new Double(ratioMinSpinner.getValue().toString()));
    props.setMaxRatio(new Double(ratioMaxSpinner.getValue().toString()));

    ui.computeRatio(props);
    resetRatioSpinners(props);
}//GEN-LAST:event_ratioMaxSpinnerStateChanged



public void resetRatioSpinners(HSIProps argprop) {
    double min = argprop.getMinRatio();
    double max = argprop.getMaxRatio();
    
    ratioMinSpinner.setValue(min);
    ratioMaxSpinner.setValue(max);
}

public double getRatioMinVal() {
    return new Double(ratioMinSpinner.getValue().toString());
}

public double getRatioMaxVal() {
    return new Double(ratioMaxSpinner.getValue().toString());
}

private synchronized void update(boolean bUpdateUI) {
        if(ui == null) {
            return;
        } else if(bUpdating) {
            return;
        }
        bUpdating = true ;
        if(bUpdateUI) {
            jComboBox1.setSelectedIndex(props.getNumMass());
            jComboBox2.setSelectedIndex(props.getDenMass());       
            jSpinner1.setValue(props.getMaxRatio());
            jSpinner2.setValue(props.getMinRatio());
            jSpinner3.setValue(props.getMinNum());
            jSpinner4.setValue(props.getMinDen());  
            jSlider1.setValue(512-props.getMaxRGB());
            jComboBox3.setSelectedIndex(props.getTransparency());
            jComboBox4.setSelectedIndex(props.getLabelMethod());
        }
        
        jButton1.setEnabled(props.getNumMass() != props.getDenMass());
        jButton3.setEnabled(props.getNumMass() != props.getDenMass());

        if(ui.getHSIImageIndex(props) != -1) {
            displayHSI();
        }
        
        bUpdating = false ;
    }
    
    public void updateImage() {
        if(ui == null) {
            return;
        }
        com.nrims.Opener image = ui.getMimsImage() ;
        if(image == null) {
            return;
        }
        bUpdating = true ;
        jComboBox1.removeAllItems() ;
        jComboBox2.removeAllItems() ;
        
        String [] massNames = image.getMassNames() ;
        
        for(int i=0; i< massNames.length; i++) {
            jComboBox1.insertItemAt("Mass "+massNames[i],i);
            jComboBox2.insertItemAt("Mass "+massNames[i],i);
        }
        jComboBox1.setSelectedIndex(0);
        jComboBox2.setSelectedIndex(1);
        bUpdating = false ;
    }
    
    public boolean getRatioRange() {
        MimsPlus[] ml = ui.getMassImages() ;
        if(props.getNumMass() > ml.length ) {
            return false;
        } else if(props.getDenMass() > ml.length ) {
            return false;
        }
        MimsPlus num = ml[props.getNumMass()];
        MimsPlus den = ml[props.getDenMass()];
        if(num == null || den == null) {
            return false;
        } else if(num.getBitDepth() != 16 || den.getBitDepth() != 16) {
            return false;
        }

        short [] numPixels = (short[])num.getProcessor().getPixels() ;
        short [] denPixels = (short[])den.getProcessor().getPixels() ;
        
        double rmax = 0.0 ;
        double rmin = 100000000.0 ;
        int nt = props.getMinNum() ;
        int dt = props.getMinDen() ;
        
        if(numPixels.length != denPixels.length) {
            return false;
        }
        for(int i = 0 ; i < numPixels.length ; i++ ) {
            if(numPixels[i] > nt && denPixels[i] > dt) {
                double r = (double)numPixels[i]/(double)denPixels[i];
                if(r > rmax) {
                    rmax = r;
                }
                else if( r < rmin ) {
                    rmin = r;
                }
            }
        }
        props.setMaxRatio(rmax);
        props.setMinRatio(rmin);
        
        return true ;
    }
    
    public boolean computeRatio() {
        return ui.computeRatio(props) ;
    }
    
    public boolean displayHSI() {
        return ui.computeHSI(props) ;
    }
    
    
    public HSIProps getHSIProps() { return props ; }
    
    public void setHSIProps(HSIProps props) {
        this.props.setProps(props);
        update(true);
    }
    
    public boolean ratioIsFixed() {
        System.out.println("ratioIsFixed called, return: " + this.ratioContrastRadioButton.isSelected());
        return this.ratioContrastRadioButton.isSelected();
    }
    

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox ratioContrastComboBox;
    private javax.swing.JRadioButton ratioContrastRadioButton;
    private javax.swing.JSpinner ratioMaxSpinner;
    private javax.swing.JSpinner ratioMinSpinner;
    // End of variables declaration//GEN-END:variables
    
}
